using System;
using System.Collections.Generic;
using System.Linq;

namespace Car_service
{
    class Program
    {
        private static void Main()
        {
            CarService carService = new CarService(100, new Detail[] { new Detail("мотор", 100), new Detail("выхлопная труба", 100), new Detail("тормоза", 100) });

            CustomersCar[] сustomersСars =
            {
                new CustomersCar("мотор"),
                new CustomersCar("лобовое стекло"),
                new CustomersCar("тормоза")
            };

            for (int i = 0; i < сustomersСars.Length; i++)
            {
                Console.SetCursorPosition(0, 21);
                Console.WriteLine($"Ваш баланс: {carService.Money}$");
                Console.SetCursorPosition(0, 0);

                Console.WriteLine("Поломанка: " + сustomersСars[i].Breaking);
                Console.WriteLine();
                Console.SetCursorPosition(0, 16);
                carService.ShowDetails();
                Console.SetCursorPosition(0, 1);
                Console.WriteLine();

                Console.WriteLine("Действия:" +
                "\n1)принять заказ" +
                "\n2)отказаться");
                Console.WriteLine();
                Console.Write("Выберите действие: ");
                switch (Convert.ToInt32(Console.ReadLine()))
                {
                    case 1:
                        Console.Write("Выберите деталь: ");
                        int detailNumber = Convert.ToInt32(Console.ReadLine()) - 1;
                        carService.ReplaceDetail(detailNumber, carService, сustomersСars[i]);
                        break;
                    default:
                        carService.PayFine();
                        break;
                }

                Console.ReadKey();
                Console.Clear();
            }
        }
    }

    class CarService
    {
        public int Money { get; private set; }
        private Detail[] _details;

        public CarService(int money, Detail[] details)
        {
            Money = money;
            _details = details;
        }

        public void ShowDetails()
        {
            Console.WriteLine("Ваши детали:");
            for (int i = 0; i < _details.Length; i++)
            {
                Console.WriteLine($"{i + 1}){_details[i].NameOfDetail}");
            }
        }

        public bool DeleteDetail(int detailNumber, bool success, CustomersCar customersCar)
        {
            for (int i = 0; i < _details.Length; i++)
            {
                if (detailNumber == i)
                {
                    if (_details[i].NameOfDetail == customersCar.Breaking)
                    {
                        ReplenishBalance(i);
                        _details = _details.Where(detail => detail.NameOfDetail != _details[i].NameOfDetail).ToArray();
                        
                        success = true;

                    }
                }
            }

            return success;
        }

        public void ReplaceDetail(int detailNumber, CarService carService, CustomersCar customersCar)
        {
            bool success = false;

            success = carService.DeleteDetail(detailNumber, success, customersCar);
            Console.WriteLine();
            if (success == true)
            {
                Console.WriteLine("Заказ успешно выполнен!");
            }
            else
            {
                Console.WriteLine("Ошибка: замена не удалась.");
                carService.PayFine();
            }
        }

        public void PayFine()
        {
            if (Money < 100)
            {
                Console.WriteLine("Ошибка: Недостаточно средств для выплаты штрафа.");
                Console.ReadKey();
                Environment.Exit(0);
            }
            Money -= 100;
            Console.WriteLine("Вы заплатили штраф в размере 100$");
        }

        public void ReplenishBalance(int detailNumber)
        {
            int priceForWork = 50;
            Money += priceForWork + _details[detailNumber].DetailCost;
        }
    }

    class Detail
    {
        public string NameOfDetail { get; private set; }
        public int DetailCost { get; private set; }

        public Detail(string nameOfDetail, int detailCost)
        {
            NameOfDetail = nameOfDetail;
            DetailCost = detailCost;
        }
    }

    class CustomersCar
    {
        public string Breaking { get; private set; }

        public CustomersCar(string breaking)
        {
            Breaking = breaking;
        }
    }
}
