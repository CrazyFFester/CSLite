using System;
using System.Collections.Generic;
using System.Linq;

namespace Player_Database
{
    class Program
    {
        private static void Main()
        {
            Database database = new Database();
            bool programIsOn = true;

            while (programIsOn)
            {
                Console.SetCursorPosition(0, 20);
                database.DisplayListOfElement();
                Console.SetCursorPosition(0, 0);

                Console.WriteLine("Команды:" +
                    "\n1)Добавление игрока" +
                    "\n2)Бан игрока" +
                    "\n3)Разбан игрока" +
                    "\n4)Удаление игрока" +
                    "\n5)Выйти");
                Console.WriteLine();
                Console.Write("Ответ: ");
                int.TryParse(Console.ReadLine(), out int userInput);

                switch (userInput)
                {
                    case 1:
                        database.AddElement();
                        break;
                    case 2:
                        database.BanElement();
                        break;
                    case 3:
                        database.UnbanElement();
                        break;
                    case 4:
                        database.DeleteElement();
                        break;
                    case 5:
                        programIsOn = false;
                        break;
                    default:
                        Console.WriteLine();
                        Console.WriteLine("Такой команды нет!!!");
                        Console.ReadKey();
                        break;
                }

                Console.Clear();
            }
        }
    }

    class Player
    {
        private string _name;
        private int _level;
        private bool _isBanned;

        public Player(string nameOfPLayer, int level, bool isBanned)
        {
            _name = nameOfPLayer;
            _level = level;
            _isBanned = isBanned;
        }

        public void ShowInfo(int index)
        {
            Console.WriteLine($"{index + 1})Name - {_name}, Level - {_level}, Is banned - {_isBanned}.");
        }

        public void Ban()
        {
            _isBanned = true;
        }

        public void UnBan()
        {
            _isBanned = false;
        }
    }

    class Database
    {
        private List<Player> _players = new List<Player>();

        public void DeleteElement()
        {
            Console.Write("\nВведите порядковый индекс игрока, которого хотите удалить: ");
            int playerIndex = Convert.ToInt32(Console.ReadLine()) - 1;
            if (playerIndex >= 0 & playerIndex <= _players.Count - 1)
            {
                _players.RemoveAt(playerIndex);
            }
        }

        public void BanElement()
        {
            Console.Write($"\nВведите порядковый номер игрока, которого хотите забанить: ");
            int playerIndex = Convert.ToInt32(Console.ReadLine()) - 1;
            if (playerIndex >= 0 & playerIndex <= _players.Count - 1)
            {
                _players[playerIndex].Ban();
            }
        }

        public void UnbanElement()
        {
            Console.Write($"\nВведите порядковый номер игрока, которого хотите разбанить: ");
            int playerIndex = Convert.ToInt32(Console.ReadLine()) - 1;
            if (playerIndex >= 0 & playerIndex <= _players.Count - 1)
            {
                _players[playerIndex].UnBan();
            }
        }

        public void DisplayListOfElement()
        {
            Console.WriteLine("Список игроков:");
            for (int i = 0; i < _players.Count; i++)
            {
                _players[i].ShowInfo(i);
            }
        }

        public void AddElement()
        {
            string nameOfPLayer;
            int level;

            Console.Write("\nВведите имя игрока: ");
            nameOfPLayer = Console.ReadLine();
            Console.Write("Введите уровень игрока: ");
            level = Convert.ToInt32(Console.ReadLine());

            _players.Add(new Player(nameOfPLayer, level, false));
        }
    }
}
