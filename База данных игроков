using System;
using System.Collections.Generic;
using System.Linq;

namespace Player_Database
{
    class Program
    {
        private static void Main()
        {
            Player[] players = new Player[0];
            List list = new List();

            while (true)
            {
                Console.SetCursorPosition(0, 20);
                list.PlayerListDisplay(players);
                Console.SetCursorPosition(0, 0);

                Console.WriteLine("Команды:" +
                    "\n1)Добавление игрока." +
                    "\n2)Бан игрока." +
                    "\n3)Разбан игрока." +
                    "\n4)Удаление игрока");
                ActionSelection(ref players, list);

                Console.Clear();
            }
        }

        private static void ActionSelection(ref Player[] players, List list)
        {
            switch (Convert.ToInt32(Console.ReadLine()))
            {
                case 1:
                    list.AddPlayer(ref players);
                    break;
                case 2:
                    list.PlayerStateChange(players, true, "забанить");
                    break;
                case 3:
                    list.PlayerStateChange(players, false, "разбанить");
                    break;
                case 4:
                    list.DeletePlayer(ref players);
                    break;
                default:
                    Console.WriteLine("Такой команды нет!!!");
                    break;
            }
        }
    }

    class Player
    {
        private string _nameOfPLayer;
        private int _level;
        public bool IsBanned;

        public Player(string nameOfPLayer, int level, bool isBanned)
        {
            _nameOfPLayer = nameOfPLayer;
            _level = level;
            IsBanned = isBanned;
        }
        public void ShowInfo(int i)
        {
            Console.WriteLine($"{i + 1})Name - {_nameOfPLayer}, Level - {_level}, Is banned - {IsBanned}");
        }
    }

    class List
    {
        public void DeletePlayer(ref Player[] players)
        {
            Console.Write("\nВведите порядковый номер игрока, которого хотите удалить: ");
            int playerIndex = Convert.ToInt32(Console.ReadLine()) - 1;
            for (int i = 0; i < players.Length; i++)
            {
                if (playerIndex == i)
                {
                    List<Player> tempPlayers = players.ToList();
                    tempPlayers.RemoveAt(i);
                    players = tempPlayers.ToArray();
                }
            }
        }

        public void PlayerStateChange(Player[] players, bool playerState, string message)
        {
            Console.Write($"\nВведите порядковый номер игрока, которого хотите {message}: ");
            int playerIndex = Convert.ToInt32(Console.ReadLine()) - 1;
            for (int i = 0; i < players.Length; i++)
            {
                if (playerIndex == i)
                {
                    players[i].IsBanned = playerState;
                }
            }
        }

        public void PlayerListDisplay(Player[] players)
        {
            Console.WriteLine("Список игроков:");
            for (int i = 0; i < players.Length; i++)
            {
                players[i].ShowInfo(i);
            }
        }

        public void AddPlayer(ref Player[] players)
        {
            string nameOfPLayer;
            int level;
            Player[] tempPlayers = new Player[players.Length + 1];

            Console.Write("\nВведите имя игрока: ");
            nameOfPLayer = Console.ReadLine();
            Console.Write("Введите уровень игрока: ");
            level = Convert.ToInt32(Console.ReadLine());
            tempPlayers[tempPlayers.Length - 1] = new Player(nameOfPLayer, level, false);

            for (int i = 0; i < players.Length; i++)
            {
                tempPlayers[i] = players[i];
            }
            players = tempPlayers;
        }
    }
}
