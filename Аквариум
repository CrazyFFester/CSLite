using System;
using System.Collections.Generic;
using System.Linq;

namespace Aquarium
{
    class Program
    {
        private static void Main()
        {
            AquariumInhabitant[] aquariumInhabitants = new AquariumInhabitant[0];
            AquariumInhabitant aquariumInhabitant = new AquariumInhabitant();
            Fish fishes = new Fish();

            while (true)
            {
                Console.SetCursorPosition(0, 18);
                fishes.ShowInfo(aquariumInhabitants);
                Console.SetCursorPosition(0, 0);
                fishes.ElementConditionCheck(ref aquariumInhabitants);
                ActionSelection(ref aquariumInhabitants, aquariumInhabitant);

                Console.Clear();
            }
        }

        private static void ActionSelection(ref AquariumInhabitant[] aquariumInhabitants, AquariumInhabitant aquariumInhabitant)
        {
            int fishNumber;

            Console.WriteLine("Выберите команду:" +
            "\n1)Добавить рыбу" +
            "\n2)Достать рыбу");
            switch (Convert.ToInt32(Console.ReadLine()))
            {
                case 1:
                    aquariumInhabitant.AddElement(ref aquariumInhabitants);
                    break;
                case 2:
                    Console.WriteLine("\nВвведите номер рыбы, которую хотите достать:");
                    fishNumber = Convert.ToInt32(Console.ReadLine()) - 1;
                    aquariumInhabitant.DeleteElement(ref aquariumInhabitants, fishNumber);
                    break;
                default:
                    Console.WriteLine("Такой команды нет!!!");
                    break;
            }
        }

        class AquariumInhabitant
        {
            public int AgeOfFish;
            public int MaximumAgeOfFish = 10;

            public void AddElement(ref AquariumInhabitant[] aquariumInhabitants)
            {
                AquariumInhabitant[] tempaquariumInhabitants = new AquariumInhabitant[aquariumInhabitants.Length + 1];
                tempaquariumInhabitants[tempaquariumInhabitants.Length - 1] = new AquariumInhabitant();
                for (int i = 0; i < aquariumInhabitants.Length; i++)
                {
                    tempaquariumInhabitants[i] = aquariumInhabitants[i];
                }
                aquariumInhabitants = tempaquariumInhabitants;
            }

            public void DeleteElement(ref AquariumInhabitant[] aquariumInhabitants, int fishNumber)
            {
                for (int i = 0; i < aquariumInhabitants.Length; i++)
                {
                    if (fishNumber == i)
                    {
                        List<AquariumInhabitant> tempaquariumInhabitants = aquariumInhabitants.ToList();
                        tempaquariumInhabitants.RemoveAt(i);
                        aquariumInhabitants = tempaquariumInhabitants.ToArray();
                    }
                }
            }
        }

        class Fish : AquariumInhabitant
        {
            public void ShowInfo(AquariumInhabitant[] aquariumInhabitants)
            {
                Console.WriteLine("\nРыбы в аквариуме:");
                for (int i = 0; i < aquariumInhabitants.Length; i++)
                {
                    Console.WriteLine($"{i + 1}){aquariumInhabitants[i].AgeOfFish}/{aquariumInhabitants[i].MaximumAgeOfFish}");
                    aquariumInhabitants[i].AgeOfFish++;
                }
            }

            public void ElementConditionCheck(ref AquariumInhabitant[] aquariumInhabitants)
            {
                for (int i = 0; i < aquariumInhabitants.Length; i++)
                {
                    if (aquariumInhabitants[i].AgeOfFish == aquariumInhabitants[i].MaximumAgeOfFish)
                    {
                        Console.WriteLine($"Одна из рыб умерла, она будет убрана из акавариума.\n");
                        DeleteElement(ref aquariumInhabitants, i);
                    }
                }
            }
        }
    }
}
