using System;

namespace PassengerTrainConfigurator
{
    class Program
    {
        private static void Main()
        {
            int numberOfPassengers = 0, numberOfSeats = 0;
            Train train = new Train();

            while (true)
            {
                Console.Write("Введите точку отправления: ");
                string pointOfDeparture = Console.ReadLine();
                Console.Write("Введите точку остановки: ");
                string stayPoint = Console.ReadLine();
                Console.Clear();

                Direction direction = new Direction(pointOfDeparture, stayPoint);
                numberOfPassengers = SellTickets(numberOfPassengers);
                if (numberOfPassengers == 0)
                {
                    Console.WriteLine("Поезд пуст!");
                }
                else
                {
                    Console.WriteLine("Количество пассажиров - " + numberOfPassengers);
                    train = SettingOfTheTrain(ref numberOfSeats);
                    train.ShowInfo();
                    if (numberOfSeats < numberOfPassengers)
                    {
                        Console.WriteLine("\nМало мест!");
                    }
                    else
                    {
                        Console.Clear();
                        direction.ShowInfo();
                        Console.WriteLine();
                        Console.WriteLine("Количество пассажиров - " + numberOfPassengers);
                        train.ShowInfo();
                        Console.WriteLine("\nПоезд успешно отправлен!");
                    }
                }
                numberOfSeats = 0;
                Console.ReadKey();
                Console.Clear();
            }
        }

        private static int SellTickets(int numberOfPassengers)
        {
            Random randomValue = new Random();
            numberOfPassengers = randomValue.Next(0, 51);
            return numberOfPassengers;
        }

        private static Train SettingOfTheTrain(ref int numberOfSeats)
        {
            Console.Write("\nСколько будет вагонов: ");
            int arrayOfRailwayCarriage = Convert.ToInt32(Console.ReadLine());
            RailwayCarriage[] railwayCarriages = new RailwayCarriage[arrayOfRailwayCarriage];

            for (int i = 0; i < railwayCarriages.Length; i++)
            {
                Console.Write($"Сколько будет мест в {i + 1} вагоне: ");
                railwayCarriages[i] = new RailwayCarriage(Convert.ToInt32(Console.ReadLine()));
                numberOfSeats += railwayCarriages[i]._numberOfSeatsInRailwayCarriage;
            }
            Train train = new Train(railwayCarriages);
            return train;
        }
    }

    class Train
    {
        private RailwayCarriage[] _railwayCarriages;
        public Train(RailwayCarriage[] railwayCarriages = null)
        {
            _railwayCarriages = railwayCarriages;
        }

        public void ShowInfo()
        {
            Console.WriteLine("\nКоличество вагонов - " + _railwayCarriages.Length + ":");
            for (int i = 0; i < _railwayCarriages.Length; i++)
            {
                Console.WriteLine($"{i + 1} вагон - {_railwayCarriages[i]._numberOfSeatsInRailwayCarriage} мест");
            }
        }
    }

    class RailwayCarriage
    {
        public int _numberOfSeatsInRailwayCarriage { get; private set; }

        public RailwayCarriage(int numberOfSeatsInRailwayCarriage = 0)
        {
            _numberOfSeatsInRailwayCarriage = numberOfSeatsInRailwayCarriage;
        }
    }

    class Direction
    {
        private string _pointOfDeparture;
        private string _stayPoint;
        public Direction(string pointOfDeparture, string stayPoint)
        {
            _pointOfDeparture = pointOfDeparture;
            _stayPoint = stayPoint;
        }

        public void ShowInfo()
        {
            Console.WriteLine("Направление:");
            Console.WriteLine($"{_pointOfDeparture} - {_stayPoint}");
        }
    }
}
