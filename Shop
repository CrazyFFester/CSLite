using System;
using System.Linq;
using System.Collections.Generic;

namespace Shop
{
    class Program
    {
        private static void Main()
        {
            Person person1 = new Player(new List<Good>(0), 500);
            Person person2 = new Seller(new List<Good> 
            {
                new Good("Алмазный меч", 200),
                new Good("Золотой меч", 100),
                new Good("Лук", 50),
                new Good("Алмазная броня", 300),
                new Good("Топор", 75)
            });
            Player player = (Player)person1;
            Seller seller = (Seller)person2;

            while (true)
            {
                player.ShowBalance();
                Console.WriteLine("Комманды:" +
                "\n1)Помотреть товары продавца" +
                "\n2)Купить товар" +
                "\n3)Посмотреть свой инвентарь");
                Console.Write("\nОтвет: ");

                switch (Convert.ToInt32(Console.ReadLine()))
                {
                    case 1:
                        seller.ShowInventory("продавца");
                        break;
                    case 2:
                        PurchaseOfGoods(player, seller);
                        break;
                    case 3:
                        player.ShowInventory("игрока");
                        break;
                }

                Console.ReadKey();
                Console.Clear();
            }
        }

        private static void PurchaseOfGoods(Player player, Seller seller)
        {
            seller.ShowInventory("продавца");
            Console.Write("\nВведите индекс товара, который хотите купить: ");
            int.TryParse(Console.ReadLine(), out int productNumber);
            productNumber--;

            if (productNumber >= 0 & productNumber <= seller.Goods.Count -1)
            {
                if(player.Money > seller.Goods[productNumber].ProductPrice)
                {
                    player.TransferMoney(seller.Goods[productNumber]);
                    player.AddingItemToInventory(seller.Goods[productNumber]);
                    seller.RemoveItemFromInventory(productNumber);
                }
                else
                {
                    Console.WriteLine("\nНе достаточно средств!");
                }
            }
        }
    }

    class Good
    {
        public string Product { get; private set; }
        public int ProductPrice { get; private set; }
        public Good(string product, int productPrice = 0)
        {
            Product = product;
            ProductPrice = productPrice;
        }
    }

    class Person
    {
        public int Money { get; protected set; }
        public List<Good> Goods { get; private set; }

        public Person(List<Good> goods = null, int money = 0)
        {
            Goods = goods;
            Money = money;
        }

        public void ShowInventory(string inventoryOwner)
        {
            Console.WriteLine($"\nИнвентарь {inventoryOwner}:");
            for (int i = 0; i < Goods.Count; i++)
            {
                if(Goods[i].ProductPrice != 0)
                {
                    Console.WriteLine($"{i + 1}){Goods[i].Product} - {Goods[i].ProductPrice}");
                }
                else
                {
                    Console.WriteLine($"{i + 1}){Goods[i].Product}");
                }
            }
        }

        public void AddingItemToInventory(Good good)
        {
            Goods.Add(good);
        }

        public void RemoveItemFromInventory(int productNumber)
        {
        Goods.RemoveAt(productNumber);
        }
    }

    class Seller : Person
    {
        public Seller (List<Good> goods, int money = 0) : base(goods, money)
        {
        }
    }

    class Player : Person
    {
        public Player(List<Good> goods, int money) : base(goods, money)
        {
        }

        public void ShowBalance()
        {
            Console.SetCursorPosition(0, 20);
            Console.WriteLine($"Ваш баланс - {Money}");
            Console.SetCursorPosition(0, 0);
        }
        
        public void TransferMoney(Good good)
        {
             Money -= good.ProductPrice;
        }
    }
}
