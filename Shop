using System;
using System.Collections.Generic;

namespace Shop
{
    class Program
    {
        private static void Main()
        {
            Shop shop = new Shop(new Player(new List<Product>(0), 500),
                new Seller(new List<Product>
                {
                    new Product("Алмазный меч", 200),
                    new Product("Золотой меч", 100),
                    new Product("Лук", 50),
                    new Product("Алмазная броня", 300),
                    new Product("Топор", 75)
                }));
            bool programIsOn = true;

            while (programIsOn)
            {
                shop.ActionSelection(ref programIsOn);
            }
        }
    }

    class Product
    {
        public string Name { get; private set; }
        public int Price { get; private set; }

        public Product(string name, int price)
        {
            Name = name;
            Price = price;
        }
    }

    class Person
    {
        protected List<Product> Products;
        public int Money { get; protected set; }

        public Person(List<Product> products, int money = 0)
        {
            Products = products;
            Money = money;
        }

        public void ShowInventory(string inventoryOwner)
        {
            Console.WriteLine($"\nИнвентарь {inventoryOwner}:");
            for (int i = 0; i < Products.Count; i++)
            {
                if (Products[i].Price != 0)
                {
                    Console.WriteLine($"{i + 1}){Products[i].Name} - {Products[i].Price}");
                }
                else
                {
                    Console.WriteLine($"{i + 1}){Products[i].Name}");
                }
            }
        }

        public void AddItemToInventory(Product product)
        {
            Products.Add(product);
        }

        public void RemoveItemFromInventory(int productNumber)
        {
            Products.RemoveAt(productNumber);
        }
    }

    class Seller : Person
    {
        public Seller(List<Product> products, int money = 0) : base(products, money) { }

        public void TransferProduct(int productNumber, Player player)
        {
            if (productNumber >= 0 & productNumber <= Products.Count - 1)
            {
                if (player.Money > Products[productNumber].Price)
                {
                    player.TransferMoney(Products[productNumber]);
                    player.AddItemToInventory(Products[productNumber]);
                    RemoveItemFromInventory(productNumber);
                }
                else
                {
                    Console.WriteLine("\nНе достаточно средств!");
                }
            }
        }
    }

    class Player : Person
    {
        public Player(List<Product> products, int money) : base(products, money) { }

        public void ShowBalance()
        {
            Console.WriteLine($"Ваш баланс - {Money}");
        }

        public void TransferMoney(Product product)
        {
            Money -= product.Price;
        }
    }

    class Shop
    {
        private Player _player;
        private Seller _seller;

        public Shop(Player player, Seller seller)
        {
            _player = player;
            _seller = seller;
        }

        public void ActionSelection(ref bool programIsOn)
        {
            Console.SetCursorPosition(0, 20);
            _player.ShowBalance();
            Console.SetCursorPosition(0, 0);

            Console.WriteLine("Команды:" +
            "\n1)Помотреть товары продавца" +
            "\n2)Купить товар" +
            "\n3)Посмотреть свой инвентарь" +
            "\n4)Выход");
            Console.Write("\nОтвет: ");
            int.TryParse(Console.ReadLine(), out int userCommand);

            switch (userCommand)
            {
                case 1:
                    _seller.ShowInventory("продавца");
                    break;
                case 2:
                    PurchaseProduct();
                    break;
                case 3:
                    _player.ShowInventory("игрока");
                    break;
                case 4:
                    programIsOn = false;
                    break;
            }

            Console.ReadKey();
            Console.Clear();
        }

        public void PurchaseProduct()
        {
            _seller.ShowInventory("продавца");
            Console.Write("\nВведите индекс товара, который хотите купить: ");
            int.TryParse(Console.ReadLine(), out int productNumber);
            productNumber--;

            _seller.TransferProduct(productNumber, _player);
        }
    }
}
