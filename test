using System;

namespace Lesson
{
    class Program
    {
        private static void Main()
        {
            bool fighterIsAlive = true;
            Figther[] figthers =
            {
                new Wizard("Wizard", 130, 100, 0, "Может с помощью заклинания увеличить урон на 20 единиц"),
                new Knight("Knight", 150, 75, 50, "Может помолиться и увеличить броню на 10 единиц"),
                new Barbarian("Barbarian", 200, 65, 0, "Когда он кричит, у него отнимается 2 единицы брони, и увеличиватеся здоровье на 12 единиц"),
                new Berserk("Berserk", 150, 65, 35, "Может съесть грибы, и его урон удвоется, но здоровье уменьшится на 20 единиц"),
                new Magician("Magician", 120, 130, 0, "Может увеличить здоровье на 50 единиц")
            };

            DisplayFighter(figthers);
            Console.Write("Выберите бойца в синем углу: ");
            Figther blueFigther = figthers[Convert.ToInt32(Console.ReadLine()) - 1];
            Console.Write("Выберите бойца в красном углу: ");
            Figther redFigther = figthers[Convert.ToInt32(Console.ReadLine()) - 1];
            Console.Clear();

            while (fighterIsAlive)
            {
                fighterIsAlive = CheckingTheStateOfAFighter(blueFigther, redFigther, fighterIsAlive);
                fighterIsAlive = CheckingTheStateOfAFighter(redFigther, blueFigther, fighterIsAlive);
            }

            if (blueFigther.Health <= 0 && redFigther.Health <= 0)
            {
                Console.WriteLine("Ничья");
            }
            else if (blueFigther.Health <= 0)
            {
                Console.WriteLine("Победил - " + redFigther.Name);
            }
            else
            {
                Console.WriteLine("Победил - " + blueFigther.Name);
            }

            Console.ReadKey();
        }

        private static bool CheckingTheStateOfAFighter(Figther figther1, Figther figther2, bool fighterIsAlive)
        {
            if (figther1.Health > 0 && figther2.Health > 0)
            {
                Battle(figther1, figther2, figther1.Name);
            }
            else
            {
                fighterIsAlive = false;
            }
            return fighterIsAlive;
        }

        private static void Battle(Figther figther1, Figther figther2, string attacking)
        {
            Console.WriteLine($"ход {attacking}:" +
                "\n1) Обычный удар" +
                "\n2) Супер способность");
            switch (Convert.ToInt32(Console.ReadLine()))
            {
                case 1:
                    figther2.TakeDamage(figther1.Damage);
                    break;
                case 2:
                    figther1.UseOfSuperAbility();
                    break;
            }
            Console.WriteLine();
            figther1.ShowStats();
            figther2.ShowStats();
        }

        private static void DisplayFighter(Figther[] figthers)
        {
            for (int i = 0; i < figthers.Length; i++)
            {
                Console.Write($"{i + 1})");
                figthers[i].ShowStats();
            }
        }
    }

    class Figther
    {
        public string Name { get; private set; }
        public int Health { get; protected set; }
        public int Damage { get; protected set; }
        public int Armor { get; protected set; }
        private string _superAbility;

        public Figther(string name, int health, int damage, int armor, string superAbility)
        {
            Name = name;
            Health = health;
            Damage = damage;
            Armor = armor;
            _superAbility = superAbility;
        }
        public void TakeDamage(int damage)
        {
            Health -= damage - Armor;
        }

        public virtual void UseOfSuperAbility() { }

        public void ShowStats()
        {
            Console.WriteLine($"{Name}, HP - {Health}, DMG - {Damage}, Armor - {Armor},\n- SuperAbility: {_superAbility}");
            Console.WriteLine();
        }
    }

    class Wizard : Figther
    {
        public Wizard(string name, int health, int damage, int armor, string superAbility) : base(name, health, damage, armor, superAbility) { }
        public override void UseOfSuperAbility()
        {
            Damage *= 2;
        }
    }

    class Knight : Figther
    {
        public Knight(string name, int health, int damage, int armor, string superAbility) : base(name, health, damage, armor, superAbility) { }
        public override void UseOfSuperAbility()
        {
            Armor += 10;
        }
    }

    class Barbarian : Figther
    {
        public Barbarian(string name, int health, int damage, int armor, string superAbility) : base(name, health, damage, armor, superAbility) { }
        public override void UseOfSuperAbility()
        {
            Armor -= 5;
            Health += 12;
        }
    }

    class Berserk : Figther
    {
        public Berserk(string name, int health, int damage, int armor, string superAbility) : base(name, health, damage, armor, superAbility) { }
        public override void UseOfSuperAbility()
        {
            Damage *= 5;
            Health -= 10;
        }
    }

    class Magician : Figther
    {
        public Magician(string name, int health, int damage, int armor, string superAbility) : base(name, health, damage, armor, superAbility) { }
        public override void UseOfSuperAbility()
        {
            Health += 50;
        }
    }
}
